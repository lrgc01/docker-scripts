#!/bin/bash
# Generic definition to be used in create.sh scripts 
# in all image definition under this directory.

CheckImgDependency() {
   _ERROR=0
   unset _LASTID
   unset _DOCKERFILE
   unset _USEDID
   unset _CURRID

   if [ `whoami` != "root" ]; then
        _SUDO="sudo"
   fi

   while [ $# -gt 0 ]
   do
      case $1 in
         --[lL][iI][dD]|-[lL]) _LASTID="$2"
             shift 2
         ;;
         --[dD][oO][cC][kK][fF]|-[fF]) _DOCKERFILE="$2"
             shift 2
         ;;
         --[dD][rR][yY]-[rR][uU][nN]|-[dD]) 
             _DRYRUN='echo [DryRun] Would run:'
             shift 1
         ;;
         --[hH][eE][lL][pP]|-[hH])
             #Usage
             exit
         ;;
         *) shift
         ;;
      esac
   done

   if [ -z "$_LASTID" ]; then
      echo "Must specify -l <last img id or file with id used>"
      _ERROR=1
   elif [ -f "$_LASTID" ]; then 
      _USEDID=$(cat "$_LASTID")
   elif [ "$(echo $_LASTID | grep '^sha')" != "" ]; then
      _USEDID="$_LASTID"
   fi

   if [ -z "$_DOCKERFILE" -o "$_ERROR" -eq 1 ]; then
      echo "Must specify -f <dockerfile>"
      _ERROR=1
   else
      _BASEIMG=$(grep -e "^FROM " $_DOCKERFILE | sed -e 's/FROM //' -e 's/ AS .*//' | head -1)
      $_DRYRUN $_SUDO docker pull $_BASEIMG > /dev/null 2>&1
      _CURRID=$($_DRYRUN $_SUDO docker inspect --format "{{.Id}}" $_BASEIMG)
      echo "$_CURRID"
      if [ "$_CURRID" != "$_USEDID" ]; then
         return 1
      else
         return 0
      fi
   fi

   return $_ERROR

}


BASE_FOLDER=${BASE_FOLDER:-"lrgc01/"}

BASEPATH=/usr/local/bin:/usr/local/sbin:/opt/maven/bin:/usr/bin:/usr/sbin:/bin:/sbin

LOCALBIN="usr/local/bin"

# Global build version when want to keep all the same
# versioning tag
GLOBAL_TAG_VER=""

# Will be used within all images related to jenkins docker system
JENKINS_USR=jenkins
JENKINS_UID=10002
JENKINS_GRP=jenkins
JENKINS_GID=10002
JENKINS_HOMEDIR=/var/lib/jenkins

# Jenkins System key file
JENKINS_KEY_FILE="Jenkins_System_Key"

# Used in jenkins
PYHOST_FILE="python.host"
PYWRAP_FILE="py_wrap.sh"
NODE_HOST_FILE="nodejs.host"
NODE_WRAP_FILE="nodejs_warp.sh"

# To python image
PY_STARTFILE="python.start"
PY_IPFILE="$JENKINS_PYHOST_FILE"

# To nodejs image
NODE_STARTFILE="nodejs.start"
NODE_IPFILE="nodejs.host"

BIND_GID="102"
BIND_UID="102"

MACHINE=$(uname -m)  # aarch64, x86_64, etc
ARCH=$(dpkg --print-architecture)  # amd64, arm64, etc
FROMIMG="lrgc01/debian-ssh:${ARCH}"
#FROMIMG="lrgc01/ssh-stable_slim"

STARTFILE="bootstrap.container.sh"
IPFILE="container.host"
START_DIR="/start.d"
START_CMD="start.sh"

# Versioning in order to keep a copy if running more than once
# Note the ":" in the formated output
# May change for own needs
BUILD_VER=${GLOBAL_TAG_VER:-$(date +:%Y%m%d%H%M)}

CURDIR=$(pwd)
DIRBASEDTAG="$(basename $CURDIR | sed -e 's/[0-9][0-9][0-9]-//')"

DOCKERFILE="Dockerfile"
LASTIDFILE="./lastid.${ARCH}"

S6_OVERLAY_VERSION="3.2.0.0"

S6Tar=etc-s6.tgz
